{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\VSC\\\\beca\\\\beca\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ProfileCard from './components/ProfileCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const [orden, setOrden] = useState('nombre'); // Estado para almacenar el orden actual\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const response = await fetch('url-de-tu-api-que-devuelve-los-datos');\n        const data = await response.json();\n\n        // Aquí asumimos que la API devuelve un array de objetos con los datos de los perfiles\n        const profiles = data.map(profile => ({\n          nombre: profile.nombre,\n          apellidos: profile.apellidos,\n          curso: profile.curso,\n          anoIngreso: profile.anoIngreso,\n          notaMedia: profile.notaMedia,\n          fotoUrl: profile.fotoUrl\n        }));\n\n        // Ordenar los perfiles según el estado actual 'orden'\n        const sortedProfiles = ordenarPerfiles(profiles, orden);\n        setProfileData(sortedProfiles);\n      } catch (error) {\n        console.error('Error al obtener datos de los perfiles:', error);\n      }\n    };\n    fetchProfileData();\n  }, [orden]); // Dependencia 'orden' para ejecutar useEffect cuando cambia\n\n  const ordenarPerfiles = (profiles, order) => {\n    switch (order) {\n      case 'nombre':\n        return profiles.sort((a, b) => a.nombre.localeCompare(b.nombre));\n      case 'apellido':\n        return profiles.sort((a, b) => a.apellidos.localeCompare(b.apellidos));\n      case 'curso':\n        return profiles.sort((a, b) => a.curso - b.curso);\n      case 'anoIngreso':\n        return profiles.sort((a, b) => a.anoIngreso - b.anoIngreso);\n      case 'notaMedia':\n        return profiles.sort((a, b) => b.notaMedia - a.notaMedia);\n      // Orden descendente por nota media\n      default:\n        return profiles;\n    }\n  };\n  const handleChangeOrden = event => {\n    setOrden(event.target.value);\n  };\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando perfiles...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orden-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ordenar por:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: orden,\n        onChange: handleChangeOrden,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nombre\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"apellido\",\n          children: \"Apellido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"curso\",\n          children: \"Curso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"anoIngreso\",\n          children: \"A\\xF1o de Ingreso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"notaMedia\",\n          children: \"Nota Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), profileData.map((profile, index) => /*#__PURE__*/_jsxDEV(ProfileCard, {\n      nombre: profile.nombre,\n      apellidos: profile.apellidos,\n      curso: profile.curso,\n      anoIngreso: profile.anoIngreso,\n      notaMedia: profile.notaMedia,\n      fotoUrl: profile.fotoUrl\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5dpGHg3S0q4hbcdHLRK3Ukf2V+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ProfileCard","jsxDEV","_jsxDEV","App","_s","profileData","setProfileData","orden","setOrden","fetchProfileData","response","fetch","data","json","profiles","map","profile","nombre","apellidos","curso","anoIngreso","notaMedia","fotoUrl","sortedProfiles","ordenarPerfiles","error","console","order","sort","a","b","localeCompare","handleChangeOrden","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","index","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/VSC/beca/beca/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ProfileCard from './components/ProfileCard';\n\nfunction App() {\n  const [profileData, setProfileData] = useState(null);\n  const [orden, setOrden] = useState('nombre'); // Estado para almacenar el orden actual\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const response = await fetch('url-de-tu-api-que-devuelve-los-datos');\n        const data = await response.json();\n\n        // Aquí asumimos que la API devuelve un array de objetos con los datos de los perfiles\n        const profiles = data.map(profile => ({\n          nombre: profile.nombre,\n          apellidos: profile.apellidos,\n          curso: profile.curso,\n          anoIngreso: profile.anoIngreso,\n          notaMedia: profile.notaMedia,\n          fotoUrl: profile.fotoUrl\n        }));\n\n        // Ordenar los perfiles según el estado actual 'orden'\n        const sortedProfiles = ordenarPerfiles(profiles, orden);\n\n        setProfileData(sortedProfiles);\n      } catch (error) {\n        console.error('Error al obtener datos de los perfiles:', error);\n      }\n    };\n\n    fetchProfileData();\n  }, [orden]); // Dependencia 'orden' para ejecutar useEffect cuando cambia\n\n  const ordenarPerfiles = (profiles, order) => {\n    switch (order) {\n      case 'nombre':\n        return profiles.sort((a, b) => a.nombre.localeCompare(b.nombre));\n      case 'apellido':\n        return profiles.sort((a, b) => a.apellidos.localeCompare(b.apellidos));\n      case 'curso':\n        return profiles.sort((a, b) => a.curso - b.curso);\n      case 'anoIngreso':\n        return profiles.sort((a, b) => a.anoIngreso - b.anoIngreso);\n      case 'notaMedia':\n        return profiles.sort((a, b) => b.notaMedia - a.notaMedia); // Orden descendente por nota media\n      default:\n        return profiles;\n    }\n  };\n\n  const handleChangeOrden = (event) => {\n    setOrden(event.target.value);\n  };\n\n  if (!profileData) {\n    return <div>Cargando perfiles...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"orden-select\">\n        <label>Ordenar por:</label>\n        <select value={orden} onChange={handleChangeOrden}>\n          <option value=\"nombre\">Nombre</option>\n          <option value=\"apellido\">Apellido</option>\n          <option value=\"curso\">Curso</option>\n          <option value=\"anoIngreso\">Año de Ingreso</option>\n          <option value=\"notaMedia\">Nota Media</option>\n        </select>\n      </div>\n      {profileData.map((profile, index) => (\n        <ProfileCard\n          key={index}\n          nombre={profile.nombre}\n          apellidos={profile.apellidos}\n          curso={profile.curso}\n          anoIngreso={profile.anoIngreso}\n          notaMedia={profile.notaMedia}\n          fotoUrl={profile.fotoUrl}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}